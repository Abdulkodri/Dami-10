{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b69a2d71-33de-4aa3-804a-0b7571c88cd8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "bd928183-527a-42fd-856d-ed04138c597d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>140.5625</th>\n",
       "      <th>55.68378214</th>\n",
       "      <th>-0.234571412</th>\n",
       "      <th>-0.699648398</th>\n",
       "      <th>3.199832776</th>\n",
       "      <th>19.11042633</th>\n",
       "      <th>7.975531794</th>\n",
       "      <th>74.24222492</th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>102.507812</td>\n",
       "      <td>58.882430</td>\n",
       "      <td>0.465318</td>\n",
       "      <td>-0.515088</td>\n",
       "      <td>1.677258</td>\n",
       "      <td>14.860146</td>\n",
       "      <td>10.576487</td>\n",
       "      <td>127.393580</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>103.015625</td>\n",
       "      <td>39.341649</td>\n",
       "      <td>0.323328</td>\n",
       "      <td>1.051164</td>\n",
       "      <td>3.121237</td>\n",
       "      <td>21.744669</td>\n",
       "      <td>7.735822</td>\n",
       "      <td>63.171909</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>136.750000</td>\n",
       "      <td>57.178449</td>\n",
       "      <td>-0.068415</td>\n",
       "      <td>-0.636238</td>\n",
       "      <td>3.642977</td>\n",
       "      <td>20.959280</td>\n",
       "      <td>6.896499</td>\n",
       "      <td>53.593661</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>88.726562</td>\n",
       "      <td>40.672225</td>\n",
       "      <td>0.600866</td>\n",
       "      <td>1.123492</td>\n",
       "      <td>1.178930</td>\n",
       "      <td>11.468720</td>\n",
       "      <td>14.269573</td>\n",
       "      <td>252.567306</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>93.570312</td>\n",
       "      <td>46.698114</td>\n",
       "      <td>0.531905</td>\n",
       "      <td>0.416721</td>\n",
       "      <td>1.636288</td>\n",
       "      <td>14.545074</td>\n",
       "      <td>10.621748</td>\n",
       "      <td>131.394004</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     140.5625  55.68378214  -0.234571412  -0.699648398  3.199832776  \\\n",
       "0  102.507812    58.882430      0.465318     -0.515088     1.677258   \n",
       "1  103.015625    39.341649      0.323328      1.051164     3.121237   \n",
       "2  136.750000    57.178449     -0.068415     -0.636238     3.642977   \n",
       "3   88.726562    40.672225      0.600866      1.123492     1.178930   \n",
       "4   93.570312    46.698114      0.531905      0.416721     1.636288   \n",
       "\n",
       "   19.11042633  7.975531794  74.24222492  0  \n",
       "0    14.860146    10.576487   127.393580  0  \n",
       "1    21.744669     7.735822    63.171909  0  \n",
       "2    20.959280     6.896499    53.593661  0  \n",
       "3    11.468720    14.269573   252.567306  0  \n",
       "4    14.545074    10.621748   131.394004  0  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_data=pd.read_csv(\"HTRU_2.csv\")\n",
    "df_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3239411c-d177-4a5e-8817-09f83afac93b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Mean of IP', 'STD of IP', 'Excess kurtosis of the IP',\n",
       "       'Skewness of the IP', 'Mean of the DM-SNR curve',\n",
       "       'STD of the DM-SNR CURVE', 'EXCESS Kurtosis of the DM_SNR curve',\n",
       "       'Skewness of the DM-SNR curve', 'target_class'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_data.columns=[\"Mean of IP\",\"STD of IP\",\"Excess kurtosis of the IP\",\"Skewness of the IP\",\"Mean of the DM-SNR curve\",\"STD of the DM-SNR CURVE\",\"EXCESS Kurtosis of the DM_SNR curve\",\"Skewness of the DM-SNR curve\",\"target_class\"]\n",
    "df_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "279e88d4-3775-473a-9d0a-2d398290a11a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 17897 entries, 0 to 17896\n",
      "Data columns (total 9 columns):\n",
      " #   Column                               Non-Null Count  Dtype  \n",
      "---  ------                               --------------  -----  \n",
      " 0   Mean of IP                           17897 non-null  float64\n",
      " 1   STD of IP                            17897 non-null  float64\n",
      " 2   Excess kurtosis of the IP            17897 non-null  float64\n",
      " 3   Skewness of the IP                   17897 non-null  float64\n",
      " 4   Mean of the DM-SNR curve             17897 non-null  float64\n",
      " 5   STD of the DM-SNR CURVE              17897 non-null  float64\n",
      " 6   EXCESS Kurtosis of the DM_SNR curve  17897 non-null  float64\n",
      " 7   Skewness of the DM-SNR curve         17897 non-null  float64\n",
      " 8   target_class                         17897 non-null  int64  \n",
      "dtypes: float64(8), int64(1)\n",
      "memory usage: 1.2 MB\n"
     ]
    }
   ],
   "source": [
    "df_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "9bbfec85-f93b-44d2-b4af-1f7e678905cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mean of IP</th>\n",
       "      <th>STD of IP</th>\n",
       "      <th>Excess kurtosis of the IP</th>\n",
       "      <th>Skewness of the IP</th>\n",
       "      <th>Mean of the DM-SNR curve</th>\n",
       "      <th>STD of the DM-SNR CURVE</th>\n",
       "      <th>EXCESS Kurtosis of the DM_SNR curve</th>\n",
       "      <th>Skewness of the DM-SNR curve</th>\n",
       "      <th>target_class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>17897.000000</td>\n",
       "      <td>17897.000000</td>\n",
       "      <td>17897.000000</td>\n",
       "      <td>17897.000000</td>\n",
       "      <td>17897.000000</td>\n",
       "      <td>17897.000000</td>\n",
       "      <td>17897.000000</td>\n",
       "      <td>17897.000000</td>\n",
       "      <td>17897.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>111.078321</td>\n",
       "      <td>46.549021</td>\n",
       "      <td>0.477897</td>\n",
       "      <td>1.770417</td>\n",
       "      <td>12.614926</td>\n",
       "      <td>26.326918</td>\n",
       "      <td>8.303574</td>\n",
       "      <td>104.859419</td>\n",
       "      <td>0.09158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>25.652705</td>\n",
       "      <td>6.843040</td>\n",
       "      <td>1.064056</td>\n",
       "      <td>6.168058</td>\n",
       "      <td>29.473637</td>\n",
       "      <td>19.471042</td>\n",
       "      <td>4.506217</td>\n",
       "      <td>106.517270</td>\n",
       "      <td>0.28844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>5.812500</td>\n",
       "      <td>24.772042</td>\n",
       "      <td>-1.876011</td>\n",
       "      <td>-1.791886</td>\n",
       "      <td>0.213211</td>\n",
       "      <td>7.370432</td>\n",
       "      <td>-3.139270</td>\n",
       "      <td>-1.976976</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>100.929688</td>\n",
       "      <td>42.375426</td>\n",
       "      <td>0.027108</td>\n",
       "      <td>-0.188528</td>\n",
       "      <td>1.923077</td>\n",
       "      <td>14.437330</td>\n",
       "      <td>5.781485</td>\n",
       "      <td>34.957119</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>115.078125</td>\n",
       "      <td>46.946435</td>\n",
       "      <td>0.223241</td>\n",
       "      <td>0.198736</td>\n",
       "      <td>2.801839</td>\n",
       "      <td>18.459977</td>\n",
       "      <td>8.433872</td>\n",
       "      <td>83.068996</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>127.085938</td>\n",
       "      <td>51.022887</td>\n",
       "      <td>0.473349</td>\n",
       "      <td>0.928206</td>\n",
       "      <td>5.464883</td>\n",
       "      <td>28.428152</td>\n",
       "      <td>10.702973</td>\n",
       "      <td>139.310905</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>192.617188</td>\n",
       "      <td>98.778911</td>\n",
       "      <td>8.069522</td>\n",
       "      <td>68.101622</td>\n",
       "      <td>223.392141</td>\n",
       "      <td>110.642211</td>\n",
       "      <td>34.539844</td>\n",
       "      <td>1191.000837</td>\n",
       "      <td>1.00000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Mean of IP     STD of IP  Excess kurtosis of the IP  \\\n",
       "count  17897.000000  17897.000000               17897.000000   \n",
       "mean     111.078321     46.549021                   0.477897   \n",
       "std       25.652705      6.843040                   1.064056   \n",
       "min        5.812500     24.772042                  -1.876011   \n",
       "25%      100.929688     42.375426                   0.027108   \n",
       "50%      115.078125     46.946435                   0.223241   \n",
       "75%      127.085938     51.022887                   0.473349   \n",
       "max      192.617188     98.778911                   8.069522   \n",
       "\n",
       "       Skewness of the IP  Mean of the DM-SNR curve  STD of the DM-SNR CURVE  \\\n",
       "count        17897.000000              17897.000000             17897.000000   \n",
       "mean             1.770417                 12.614926                26.326918   \n",
       "std              6.168058                 29.473637                19.471042   \n",
       "min             -1.791886                  0.213211                 7.370432   \n",
       "25%             -0.188528                  1.923077                14.437330   \n",
       "50%              0.198736                  2.801839                18.459977   \n",
       "75%              0.928206                  5.464883                28.428152   \n",
       "max             68.101622                223.392141               110.642211   \n",
       "\n",
       "       EXCESS Kurtosis of the DM_SNR curve  Skewness of the DM-SNR curve  \\\n",
       "count                         17897.000000                  17897.000000   \n",
       "mean                              8.303574                    104.859419   \n",
       "std                               4.506217                    106.517270   \n",
       "min                              -3.139270                     -1.976976   \n",
       "25%                               5.781485                     34.957119   \n",
       "50%                               8.433872                     83.068996   \n",
       "75%                              10.702973                    139.310905   \n",
       "max                              34.539844                   1191.000837   \n",
       "\n",
       "       target_class  \n",
       "count   17897.00000  \n",
       "mean        0.09158  \n",
       "std         0.28844  \n",
       "min         0.00000  \n",
       "25%         0.00000  \n",
       "50%         0.00000  \n",
       "75%         0.00000  \n",
       "max         1.00000  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_data.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "84868323-8fa4-4aed-a551-57cbe105fcea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mean of IP                             0\n",
       "STD of IP                              0\n",
       "Excess kurtosis of the IP              0\n",
       "Skewness of the IP                     0\n",
       "Mean of the DM-SNR curve               0\n",
       "STD of the DM-SNR CURVE                0\n",
       "EXCESS Kurtosis of the DM_SNR curve    0\n",
       "Skewness of the DM-SNR curve           0\n",
       "target_class                           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b0c5be2c-1947-4c4c-bcc7-b552dfee2495",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1], dtype=int64)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_data[\"target_class\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "fce4786c-946a-4eab-a24f-74aafc9d21cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    16258\n",
       "1     1639\n",
       "Name: target_class, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_data[\"target_class\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e1c77fa2-1663-48c1-816c-f953e3929d3f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "dea0a54b-71dd-42ba-9087-15a758a26948",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1728x1440 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1368 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1368 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1368 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1368 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1368 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1368 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1440x1368 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1440x1368 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(24,20))\n",
    "plt.subplot(4, 2, 1)\n",
    "fig = df_data.boxplot(column='Mean of IP')\n",
    "fig.set_title('')\n",
    "fig.set_ylabel('Mean of IP')\n",
    "\n",
    "\n",
    "plt.figure(figsize=(20,19))\n",
    "plt.subplot(4,2,2)\n",
    "fig=df_data.boxplot(column=\"STD of IP\")\n",
    "fig.set_title(\"\")\n",
    "fig.set_ylabel(\"STD of IP\")\n",
    "plt.show()\n",
    "\n",
    "plt.figure(figsize=(20,19))\n",
    "plt.subplot(4,2,3)\n",
    "fig=df_data.boxplot(column=\"Excess kurtosis of the IP\")\n",
    "fig.set_title(\"\")\n",
    "fig.set_ylabel(\"Excess kurtosis of the IP\")\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n",
    "plt.figure(figsize=(20,19))\n",
    "plt.subplot(4,2,4)\n",
    "fig=df_data.boxplot(column=\"Skewness of the IP\")\n",
    "fig.set_title(\"\")\n",
    "fig.set_ylabel(\"Skewness of the IP\")\n",
    "plt.show() \n",
    "\n",
    "\n",
    "plt.figure(figsize=(20,19))\n",
    "plt.subplot(4,2,5)\n",
    "fig=df_data.boxplot(column=\"Mean of the DM-SNR curve\")\n",
    "fig.set_title(\"\")\n",
    "fig.set_ylabel(\"Mean of the DM-SNR curve\")\n",
    "plt.show() \n",
    "\n",
    "\n",
    "plt.figure(figsize=(20,19))\n",
    "plt.subplot(4,2,6)\n",
    "fig=df_data.boxplot(column=\"STD of the DM-SNR CURVE\")\n",
    "fig.set_title(\"\")\n",
    "fig.set_ylabel(\"STD of the DM-SNR CURVE\")\n",
    "plt.show() \n",
    "\n",
    "\n",
    "plt.figure(figsize=(20,19))\n",
    "plt.subplot(4,2,7)\n",
    "fig=df_data.boxplot(column=\"EXCESS Kurtosis of the DM_SNR curve\")\n",
    "fig.set_title(\"\")\n",
    "fig.set_ylabel(\"EXCESS Kurtosis of the DM_SNR curve\")\n",
    "plt.show() \n",
    "\n",
    "\n",
    "plt.figure(figsize=(20,19))\n",
    "plt.subplot(4,2,8)\n",
    "fig=df_data.boxplot(column=\"Skewness of the DM-SNR curve\")\n",
    "fig.set_title(\"\")\n",
    "fig.set_ylabel(\"Skewness of the DM-SNR curve\")\n",
    "plt.show() \n",
    "\n",
    "plt.figure(figsize=(20,19))\n",
    "plt.subplot(4,3,1)\n",
    "fig=df_data.boxplot(column=\"target_class\")\n",
    "fig.set_title(\"\")\n",
    "fig.set_ylabel(\"Target_class\")\n",
    "plt.show() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "7a0f618f-c7e8-416c-9492-b1b0a926b7f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of pulsar stars')"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1728x1440 with 8 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(24,20))\n",
    "\n",
    "\n",
    "plt.subplot(4, 2, 1)\n",
    "fig = df_data['Mean of IP'].hist(bins=20)\n",
    "fig.set_xlabel('Mean of ')\n",
    "fig.set_ylabel('Number of pulsar stars')\n",
    "\n",
    "\n",
    "plt.subplot(4, 2, 2)\n",
    "fig = df_data['STD of IP'].hist(bins=20)\n",
    "fig.set_xlabel('STD of IP')\n",
    "fig.set_ylabel('Number of pulsar stars')\n",
    "\n",
    "\n",
    "plt.subplot(4, 2, 3)\n",
    "fig = df_data['Excess kurtosis of the IP'].hist(bins=20)\n",
    "fig.set_xlabel('Excess kurtosis of the IP')\n",
    "fig.set_ylabel('Number of pulsar stars')\n",
    "\n",
    "\n",
    "\n",
    "plt.subplot(4, 2, 4)\n",
    "fig = df_data['Skewness of the IP'].hist(bins=20)\n",
    "fig.set_xlabel('Skewness of the IP')\n",
    "fig.set_ylabel('Number of pulsar stars')\n",
    "\n",
    "\n",
    "\n",
    "plt.subplot(4, 2, 5)\n",
    "fig = df_data['Mean of the DM-SNR curve'].hist(bins=20)\n",
    "fig.set_xlabel('Mean of the DM-SNR curve')\n",
    "fig.set_ylabel('Number of pulsar stars')\n",
    "\n",
    "\n",
    "\n",
    "plt.subplot(4, 2, 6)\n",
    "fig = df_data['STD of the DM-SNR CURVE'].hist(bins=20)\n",
    "fig.set_xlabel('STD of the DM-SNR CURVE')\n",
    "fig.set_ylabel('Number of pulsar stars')\n",
    "\n",
    "\n",
    "\n",
    "plt.subplot(4, 2, 7)\n",
    "fig = df_data['EXCESS Kurtosis of the DM_SNR curve'].hist(bins=20)\n",
    "fig.set_xlabel('EXCESS Kurtosis of the DM_SNR curve')\n",
    "fig.set_ylabel('Number of pulsar stars')\n",
    "\n",
    "\n",
    "plt.subplot(4, 2, 8)\n",
    "fig = df_data['Skewness of the DM-SNR curve'].hist(bins=20)\n",
    "fig.set_xlabel('Skewness of the DM-SNR curve')\n",
    "fig.set_ylabel('Number of pulsar stars')\n",
    "\n",
    "plt.subplot(4, 3, 1)\n",
    "fig = df_data['target_class'].hist(bins=20)\n",
    "fig.set_xlabel('Target_class')\n",
    "fig.set_ylabel('Number of pulsar stars')\n",
    "            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "3cc73124-00ea-439c-a294-deb72dc19c3d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mean of IP</th>\n",
       "      <th>STD of IP</th>\n",
       "      <th>Excess kurtosis of the IP</th>\n",
       "      <th>Skewness of the IP</th>\n",
       "      <th>Mean of the DM-SNR curve</th>\n",
       "      <th>STD of the DM-SNR CURVE</th>\n",
       "      <th>EXCESS Kurtosis of the DM_SNR curve</th>\n",
       "      <th>Skewness of the DM-SNR curve</th>\n",
       "      <th>target_class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>102.507812</td>\n",
       "      <td>58.882430</td>\n",
       "      <td>0.465318</td>\n",
       "      <td>-0.515088</td>\n",
       "      <td>1.677258</td>\n",
       "      <td>14.860146</td>\n",
       "      <td>10.576487</td>\n",
       "      <td>127.393580</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>103.015625</td>\n",
       "      <td>39.341649</td>\n",
       "      <td>0.323328</td>\n",
       "      <td>1.051164</td>\n",
       "      <td>3.121237</td>\n",
       "      <td>21.744669</td>\n",
       "      <td>7.735822</td>\n",
       "      <td>63.171909</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>136.750000</td>\n",
       "      <td>57.178449</td>\n",
       "      <td>-0.068415</td>\n",
       "      <td>-0.636238</td>\n",
       "      <td>3.642977</td>\n",
       "      <td>20.959280</td>\n",
       "      <td>6.896499</td>\n",
       "      <td>53.593661</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>88.726562</td>\n",
       "      <td>40.672225</td>\n",
       "      <td>0.600866</td>\n",
       "      <td>1.123492</td>\n",
       "      <td>1.178930</td>\n",
       "      <td>11.468720</td>\n",
       "      <td>14.269573</td>\n",
       "      <td>252.567306</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>93.570312</td>\n",
       "      <td>46.698114</td>\n",
       "      <td>0.531905</td>\n",
       "      <td>0.416721</td>\n",
       "      <td>1.636288</td>\n",
       "      <td>14.545074</td>\n",
       "      <td>10.621748</td>\n",
       "      <td>131.394004</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Mean of IP  STD of IP  Excess kurtosis of the IP  Skewness of the IP  \\\n",
       "0  102.507812  58.882430                   0.465318           -0.515088   \n",
       "1  103.015625  39.341649                   0.323328            1.051164   \n",
       "2  136.750000  57.178449                  -0.068415           -0.636238   \n",
       "3   88.726562  40.672225                   0.600866            1.123492   \n",
       "4   93.570312  46.698114                   0.531905            0.416721   \n",
       "\n",
       "   Mean of the DM-SNR curve  STD of the DM-SNR CURVE  \\\n",
       "0                  1.677258                14.860146   \n",
       "1                  3.121237                21.744669   \n",
       "2                  3.642977                20.959280   \n",
       "3                  1.178930                11.468720   \n",
       "4                  1.636288                14.545074   \n",
       "\n",
       "   EXCESS Kurtosis of the DM_SNR curve  Skewness of the DM-SNR curve  \\\n",
       "0                            10.576487                    127.393580   \n",
       "1                             7.735822                     63.171909   \n",
       "2                             6.896499                     53.593661   \n",
       "3                            14.269573                    252.567306   \n",
       "4                            10.621748                    131.394004   \n",
       "\n",
       "   target_class  \n",
       "0             0  \n",
       "1             0  \n",
       "2             0  \n",
       "3             0  \n",
       "4             0  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "fcc482f4-bc62-460d-8e12-3b9e2a248d20",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df_data.drop(['target_class'], axis=1)\n",
    "y = df_data['target_class']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "d13863fe-081d-42eb-90b9-e0068095cab8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mean of IP</th>\n",
       "      <th>STD of IP</th>\n",
       "      <th>Excess kurtosis of the IP</th>\n",
       "      <th>Skewness of the IP</th>\n",
       "      <th>Mean of the DM-SNR curve</th>\n",
       "      <th>STD of the DM-SNR CURVE</th>\n",
       "      <th>EXCESS Kurtosis of the DM_SNR curve</th>\n",
       "      <th>Skewness of the DM-SNR curve</th>\n",
       "      <th>target_class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>102.507812</td>\n",
       "      <td>58.882430</td>\n",
       "      <td>0.465318</td>\n",
       "      <td>-0.515088</td>\n",
       "      <td>1.677258</td>\n",
       "      <td>14.860146</td>\n",
       "      <td>10.576487</td>\n",
       "      <td>127.393580</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>103.015625</td>\n",
       "      <td>39.341649</td>\n",
       "      <td>0.323328</td>\n",
       "      <td>1.051164</td>\n",
       "      <td>3.121237</td>\n",
       "      <td>21.744669</td>\n",
       "      <td>7.735822</td>\n",
       "      <td>63.171909</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>136.750000</td>\n",
       "      <td>57.178449</td>\n",
       "      <td>-0.068415</td>\n",
       "      <td>-0.636238</td>\n",
       "      <td>3.642977</td>\n",
       "      <td>20.959280</td>\n",
       "      <td>6.896499</td>\n",
       "      <td>53.593661</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>88.726562</td>\n",
       "      <td>40.672225</td>\n",
       "      <td>0.600866</td>\n",
       "      <td>1.123492</td>\n",
       "      <td>1.178930</td>\n",
       "      <td>11.468720</td>\n",
       "      <td>14.269573</td>\n",
       "      <td>252.567306</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>93.570312</td>\n",
       "      <td>46.698114</td>\n",
       "      <td>0.531905</td>\n",
       "      <td>0.416721</td>\n",
       "      <td>1.636288</td>\n",
       "      <td>14.545074</td>\n",
       "      <td>10.621748</td>\n",
       "      <td>131.394004</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Mean of IP  STD of IP  Excess kurtosis of the IP  Skewness of the IP  \\\n",
       "0  102.507812  58.882430                   0.465318           -0.515088   \n",
       "1  103.015625  39.341649                   0.323328            1.051164   \n",
       "2  136.750000  57.178449                  -0.068415           -0.636238   \n",
       "3   88.726562  40.672225                   0.600866            1.123492   \n",
       "4   93.570312  46.698114                   0.531905            0.416721   \n",
       "\n",
       "   Mean of the DM-SNR curve  STD of the DM-SNR CURVE  \\\n",
       "0                  1.677258                14.860146   \n",
       "1                  3.121237                21.744669   \n",
       "2                  3.642977                20.959280   \n",
       "3                  1.178930                11.468720   \n",
       "4                  1.636288                14.545074   \n",
       "\n",
       "   EXCESS Kurtosis of the DM_SNR curve  Skewness of the DM-SNR curve  \\\n",
       "0                            10.576487                    127.393580   \n",
       "1                             7.735822                     63.171909   \n",
       "2                             6.896499                     53.593661   \n",
       "3                            14.269573                    252.567306   \n",
       "4                            10.621748                    131.394004   \n",
       "\n",
       "   target_class  \n",
       "0             0  \n",
       "1             0  \n",
       "2             0  \n",
       "3             0  \n",
       "4             0  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "16d5ce1c-208b-4ff9-901c-3326db5742a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mean of IP</th>\n",
       "      <th>STD of IP</th>\n",
       "      <th>Excess kurtosis of the IP</th>\n",
       "      <th>Skewness of the IP</th>\n",
       "      <th>Mean of the DM-SNR curve</th>\n",
       "      <th>STD of the DM-SNR CURVE</th>\n",
       "      <th>EXCESS Kurtosis of the DM_SNR curve</th>\n",
       "      <th>Skewness of the DM-SNR curve</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>102.507812</td>\n",
       "      <td>58.882430</td>\n",
       "      <td>0.465318</td>\n",
       "      <td>-0.515088</td>\n",
       "      <td>1.677258</td>\n",
       "      <td>14.860146</td>\n",
       "      <td>10.576487</td>\n",
       "      <td>127.393580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>103.015625</td>\n",
       "      <td>39.341649</td>\n",
       "      <td>0.323328</td>\n",
       "      <td>1.051164</td>\n",
       "      <td>3.121237</td>\n",
       "      <td>21.744669</td>\n",
       "      <td>7.735822</td>\n",
       "      <td>63.171909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>136.750000</td>\n",
       "      <td>57.178449</td>\n",
       "      <td>-0.068415</td>\n",
       "      <td>-0.636238</td>\n",
       "      <td>3.642977</td>\n",
       "      <td>20.959280</td>\n",
       "      <td>6.896499</td>\n",
       "      <td>53.593661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>88.726562</td>\n",
       "      <td>40.672225</td>\n",
       "      <td>0.600866</td>\n",
       "      <td>1.123492</td>\n",
       "      <td>1.178930</td>\n",
       "      <td>11.468720</td>\n",
       "      <td>14.269573</td>\n",
       "      <td>252.567306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>93.570312</td>\n",
       "      <td>46.698114</td>\n",
       "      <td>0.531905</td>\n",
       "      <td>0.416721</td>\n",
       "      <td>1.636288</td>\n",
       "      <td>14.545074</td>\n",
       "      <td>10.621748</td>\n",
       "      <td>131.394004</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Mean of IP  STD of IP  Excess kurtosis of the IP  Skewness of the IP  \\\n",
       "0  102.507812  58.882430                   0.465318           -0.515088   \n",
       "1  103.015625  39.341649                   0.323328            1.051164   \n",
       "2  136.750000  57.178449                  -0.068415           -0.636238   \n",
       "3   88.726562  40.672225                   0.600866            1.123492   \n",
       "4   93.570312  46.698114                   0.531905            0.416721   \n",
       "\n",
       "   Mean of the DM-SNR curve  STD of the DM-SNR CURVE  \\\n",
       "0                  1.677258                14.860146   \n",
       "1                  3.121237                21.744669   \n",
       "2                  3.642977                20.959280   \n",
       "3                  1.178930                11.468720   \n",
       "4                  1.636288                14.545074   \n",
       "\n",
       "   EXCESS Kurtosis of the DM_SNR curve  Skewness of the DM-SNR curve  \n",
       "0                            10.576487                    127.393580  \n",
       "1                             7.735822                     63.171909  \n",
       "2                             6.896499                     53.593661  \n",
       "3                            14.269573                    252.567306  \n",
       "4                            10.621748                    131.394004  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "b6ad9fb3-fc6b-4d40-8b1a-9d53669c8204",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(12527, 8)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=42)\n",
    "X_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "294cf85f-9cc4-42f5-bb4a-2312ac650927",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5370, 8)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c1ef1225-4aca-42ad-a6da-abcecc863968",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(12527,)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train.shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "8ca0b0cd-6088-4ca6-9090-ec33345278ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5370,)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d0bb4839-243a-41ab-a6d5-7001288578f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>Mean of IP</th>\n",
       "      <th>STD of IP</th>\n",
       "      <th>Excess kurtosis of the IP</th>\n",
       "      <th>Skewness of the IP</th>\n",
       "      <th>Mean of the DM-SNR curve</th>\n",
       "      <th>STD of the DM-SNR CURVE</th>\n",
       "      <th>EXCESS Kurtosis of the DM_SNR curve</th>\n",
       "      <th>Skewness of the DM-SNR curve</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.252700e+04</td>\n",
       "      <td>1.252700e+04</td>\n",
       "      <td>1.252700e+04</td>\n",
       "      <td>1.252700e+04</td>\n",
       "      <td>1.252700e+04</td>\n",
       "      <td>1.252700e+04</td>\n",
       "      <td>1.252700e+04</td>\n",
       "      <td>1.252700e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>-2.145114e-16</td>\n",
       "      <td>1.102601e-16</td>\n",
       "      <td>-7.053333e-17</td>\n",
       "      <td>-1.829028e-17</td>\n",
       "      <td>-8.229405e-17</td>\n",
       "      <td>1.365511e-16</td>\n",
       "      <td>8.878206e-17</td>\n",
       "      <td>1.095289e-16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.000040e+00</td>\n",
       "      <td>1.000040e+00</td>\n",
       "      <td>1.000040e+00</td>\n",
       "      <td>1.000040e+00</td>\n",
       "      <td>1.000040e+00</td>\n",
       "      <td>1.000040e+00</td>\n",
       "      <td>1.000040e+00</td>\n",
       "      <td>1.000040e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-4.117158e+00</td>\n",
       "      <td>-3.164835e+00</td>\n",
       "      <td>-2.109976e+00</td>\n",
       "      <td>-5.808138e-01</td>\n",
       "      <td>-4.185479e-01</td>\n",
       "      <td>-9.699279e-01</td>\n",
       "      <td>-2.547245e+00</td>\n",
       "      <td>-1.013818e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-4.028943e-01</td>\n",
       "      <td>-6.083933e-01</td>\n",
       "      <td>-4.245703e-01</td>\n",
       "      <td>-3.185673e-01</td>\n",
       "      <td>-3.610692e-01</td>\n",
       "      <td>-6.090286e-01</td>\n",
       "      <td>-5.585394e-01</td>\n",
       "      <td>-6.593785e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.493482e-01</td>\n",
       "      <td>5.305434e-02</td>\n",
       "      <td>-2.366109e-01</td>\n",
       "      <td>-2.540982e-01</td>\n",
       "      <td>-3.315393e-01</td>\n",
       "      <td>-4.040850e-01</td>\n",
       "      <td>2.782072e-02</td>\n",
       "      <td>-2.068699e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>6.293990e-01</td>\n",
       "      <td>6.476772e-01</td>\n",
       "      <td>1.732300e-03</td>\n",
       "      <td>-1.333090e-01</td>\n",
       "      <td>-2.424699e-01</td>\n",
       "      <td>1.028055e-01</td>\n",
       "      <td>5.333998e-01</td>\n",
       "      <td>3.290206e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3.084832e+00</td>\n",
       "      <td>7.624768e+00</td>\n",
       "      <td>7.073755e+00</td>\n",
       "      <td>1.027240e+01</td>\n",
       "      <td>7.116979e+00</td>\n",
       "      <td>4.334201e+00</td>\n",
       "      <td>5.827992e+00</td>\n",
       "      <td>1.026415e+01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Mean of IP     STD of IP Excess kurtosis of the IP  \\\n",
       "count  1.252700e+04  1.252700e+04              1.252700e+04   \n",
       "mean  -2.145114e-16  1.102601e-16             -7.053333e-17   \n",
       "std    1.000040e+00  1.000040e+00              1.000040e+00   \n",
       "min   -4.117158e+00 -3.164835e+00             -2.109976e+00   \n",
       "25%   -4.028943e-01 -6.083933e-01             -4.245703e-01   \n",
       "50%    1.493482e-01  5.305434e-02             -2.366109e-01   \n",
       "75%    6.293990e-01  6.476772e-01              1.732300e-03   \n",
       "max    3.084832e+00  7.624768e+00              7.073755e+00   \n",
       "\n",
       "      Skewness of the IP Mean of the DM-SNR curve STD of the DM-SNR CURVE  \\\n",
       "count       1.252700e+04             1.252700e+04            1.252700e+04   \n",
       "mean       -1.829028e-17            -8.229405e-17            1.365511e-16   \n",
       "std         1.000040e+00             1.000040e+00            1.000040e+00   \n",
       "min        -5.808138e-01            -4.185479e-01           -9.699279e-01   \n",
       "25%        -3.185673e-01            -3.610692e-01           -6.090286e-01   \n",
       "50%        -2.540982e-01            -3.315393e-01           -4.040850e-01   \n",
       "75%        -1.333090e-01            -2.424699e-01            1.028055e-01   \n",
       "max         1.027240e+01             7.116979e+00            4.334201e+00   \n",
       "\n",
       "      EXCESS Kurtosis of the DM_SNR curve Skewness of the DM-SNR curve  \n",
       "count                        1.252700e+04                 1.252700e+04  \n",
       "mean                         8.878206e-17                 1.095289e-16  \n",
       "std                          1.000040e+00                 1.000040e+00  \n",
       "min                         -2.547245e+00                -1.013818e+00  \n",
       "25%                         -5.585394e-01                -6.593785e-01  \n",
       "50%                          2.782072e-02                -2.068699e-01  \n",
       "75%                          5.333998e-01                 3.290206e-01  \n",
       "max                          5.827992e+00                 1.026415e+01  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cols=X_train.columns\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "model=StandardScaler()\n",
    "X_train=model.fit_transform(X_train)\n",
    "X_test=model.fit_transform(X_test)\n",
    "X_train=pd.DataFrame(X_train,columns=[cols])\n",
    "X_test=pd.DataFrame(X_test,columns=[cols])\n",
    "X_train.describe()\n",
    "                    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "ddbf894a-4130-4bca-8a55-78b7e75cf22a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9806331471135941\n"
     ]
    }
   ],
   "source": [
    "from sklearn.svm import SVC\n",
    "from sklearn.metrics import accuracy_score\n",
    "model=SVC()\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "97e0508e-0586-4175-a6dc-4edd1e39a3d6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9806331471135941\n"
     ]
    }
   ],
   "source": [
    "model=SVC(C=1.0)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "aea449ad-9efe-4d5b-8f28-abd5668dd109",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9824953445065177\n"
     ]
    }
   ],
   "source": [
    "model=SVC(C=100)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "74d2d524-dd16-456d-b39e-5061b630e103",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9824953445065177\n"
     ]
    }
   ],
   "source": [
    "model=SVC(C=100)\n",
    "\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "dc11ba47-691c-4527-9ec3-db026dc5aabb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9815642458100559\n"
     ]
    }
   ],
   "source": [
    "model=SVC(C=1000)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "05dd7b07-f712-4041-9442-1a7e626eb6cd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9810055865921787\n"
     ]
    }
   ],
   "source": [
    "model=SVC(kernel=\"linear\",C=1.0)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "152956b3-9fc8-4f53-aa08-755903a8f1a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9808193668528864\n"
     ]
    }
   ],
   "source": [
    "model=SVC(kernel=\"linear\",C=100)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "236852e3-3491-416b-8ec3-c0bd48fb7fbb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9806331471135941\n"
     ]
    }
   ],
   "source": [
    "model=SVC(kernel=\"linear\",C=1000)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e0f38cec-7c4b-4d60-9206-3ad116a7b4a4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9806331471135941\n"
     ]
    }
   ],
   "source": [
    "model=SVC(kernel=\"linear\",C=1000)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "8559013a-c32c-40e6-86a0-c58be57acd24",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, ..., 0, 0, 0], dtype=int64)"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#y_pred=linear_svc.predict(X_train)\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "dd41c6fc-49b8-4177-8f15-d0c2b2587551",
   "metadata": {},
   "outputs": [],
   "source": [
    "#print(linear_svc.score(y_train,y_pred))"
   ]
  },
  {
   "cell_type": "raw",
   "id": "9757d7e7-a2d1-47a7-9aa5-aeb218bf2d06",
   "metadata": {},
   "source": [
    "print(linear_svc.score(x_train,y_train)\n",
    "print(linear_svc.score(x_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "804c4328-9794-447f-9073-fdda6ee413a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9059590316573557"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.value_counts()\n",
    "null_accuracy=4865/(4865+505)\n",
    "null_accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "200a100c-e44b-4a5e-b424-dbbb6ddf74a9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Null accuracy is:0.905959\n"
     ]
    }
   ],
   "source": [
    "print(\"Null accuracy is:{0:02f}\".format(null_accuracy))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "70f8158c-1e60-439d-91b7-fc9283c89ecb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9783985102420857\n"
     ]
    }
   ],
   "source": [
    "model=SVC(kernel=\"poly\",C=1.0)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "c8a5f2e5-4450-4092-9c6a-b932cd60ceb1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9804469273743017\n"
     ]
    }
   ],
   "source": [
    "model=SVC(kernel=\"poly\",C=100)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "2d4b5e5c-e701-4f7d-9b3a-67df9d58b529",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9806331471135941\n"
     ]
    }
   ],
   "source": [
    "model=SVC(kernel=\"linear\",C=1000)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "d1318574-743a-4732-8db9-ed7b66377283",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8778398510242086\n"
     ]
    }
   ],
   "source": [
    "model=SVC(kernel=\"sigmoid\",C=1000)\n",
    "model.fit(X_train,y_train)\n",
    "y_pred=model.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "d8ff6350-20c6-4f51-a8a4-905bbdcef4ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[4573,  292],\n",
       "       [ 364,  141]], dtype=int64)"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix\n",
    "#from matplotlib import cm\n",
    "cm=confusion_matrix(y_test,y_pred)\n",
    "cm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "f8e9cdea-3d12-45e1-9445-83b3b997d635",
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings \n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "7f4a4ead-69e7-4966-b0b7-db8f5d7e0bfe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm_matrix = pd.DataFrame(data=cm, columns=['Actual Positive:1', 'Actual Negative:0'], \n",
    "                         index=[\"Actual_postive:1\",\"Actual Negative:0\"])\n",
    "sns.heatmap(cm_matrix,annot=True,fmt=\"d\",cmap=\"RdYlGn_r\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "bcfa6bef-09e0-4f41-82b5-4bde451d5d1b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.93      0.94      0.93      4865\n",
      "           1       0.33      0.28      0.30       505\n",
      "\n",
      "    accuracy                           0.88      5370\n",
      "   macro avg       0.63      0.61      0.62      5370\n",
      "weighted avg       0.87      0.88      0.87      5370\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report\n",
    "print(classification_report(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "72b44a2a-b1a0-4ecb-baac-6b55ff4249cc",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "parameters=[{\"C\":[1,10,100,1000],\"kernel\":[\"linear\"]},\n",
    "            {\"C\":[1,10,100,1000],\"kernel\":[\"rbf\"],\"gamma\":[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]},\n",
    "             {\"C\":[1,10,100,1000],\"kernel\":[\"poly\"],\"degree\":[2,3,4],\"gamma\":[0.01,0.02,0.03,0.04,0.05]}]\n",
    "grid_search=GridSearchCV(estimator=model,scoring=\"accuracy\",param_grid=parameters,cv=5,verbose=0)\n",
    "grid_search.fit(X_train,y_train)\n",
    "grid_search\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "690313f3-07a7-41a9-904e-d2140ea2c41b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9783668098758588\n"
     ]
    }
   ],
   "source": [
    "print(grid_search.best_score_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "45fa04a0-d548-4011-a622-dc2ccf908516",
   "metadata": {},
   "outputs": [],
   "source": [
    "print(grid_search.best_param_)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8ed860e3-1593-4559-8d4f-f5bd0f148a81",
   "metadata": {},
   "outputs": [],
   "source": [
    "print(grid_search.best_estimator_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "53de0469-61f8-48e1-a676-705d3d7bdce2",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "357a15fd-ba30-4ecf-b118-501162d74f33",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
